{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","isRunning","setIsRunning","timeLeft","setTimeLeft","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAEtB,SAASC,IAEtB,MAA0BC,mBAAS,yBAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACIC,EAAcC,iBAAO,MA8BzB,SAASC,IAGPC,cAAcH,EAAYI,SAC1BT,EAAS,4BACTI,EAAY,MACZF,GAAa,GAIf,IAAMQ,EAAUC,KAAKC,MAAMT,EAAW,IAChCU,EAAUV,EAAqB,GAAVO,EAC3B,OACE,yBAAKI,UAAU,OACb,4BAAKf,GAEL,yBAAKe,UAAU,SACb,8BAAOrB,EAAQiB,IACf,mCACA,8BAAOjB,EAAQoB,KAGjB,yBAAKC,UAAU,YACXb,GAAa,4BAAQc,QAnD7B,WACEb,GAAa,GAEc,MAAvBG,EAAYI,UAEhBT,EAAS,uCACTK,EAAYI,QAAUO,aAEpB,kBACEZ,GAAY,SAACD,GACX,GAAIA,GAAY,EAAG,OAAOA,EAAW,EAErCI,SAEJ,QAqCiB,SACdN,GAAa,4BAAQc,QAnC5B,WAE6B,MAAvBV,EAAYI,UAEhBT,EAAS,iCACTiB,QAAQC,IAAIb,EAAYI,SACxBD,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBP,GAAa,MA2BK,QACH,GAAVC,GAAe,4BAAQY,QAASR,GAAjB,WC9DxBY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e9ccac6e.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\n// if helper function we can move it into another modeula and import it so,as it is not relevant to this app the author just kept the fucntion otside.\r\nfunction padTime(time) {\r\n  return time.toString().padStart(2, '0');\r\n}\r\nexport default function App() {\r\n  // statting with state variables\r\n  const [title, setTitle] = useState('Let the timer Begin!!');\r\n  const [isRunning,setIsRunning] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(5);\r\n  let intervalRef = useRef(null); //we can keep variable sfrom recent renders.\r\n  // functions\r\n  function startTimer() {\r\n    setIsRunning(true);\r\n    // as we press start more than tiwce without checkingbelow condn we are creeating two intervals with 1 sec apiece time so the text sarts flickering\r\n    if (intervalRef.current != null) return;\r\n    // (timeLeft) => timeLeft - 1) functional synatx meaning look at previous value and update the previous value\r\n    setTitle('you have got the thigs all you need');\r\n    intervalRef.current = setInterval(\r\n      //setInterval returns an unique id refering to an setInterval.\r\n      () =>\r\n        setTimeLeft((timeLeft) => {\r\n          if (timeLeft >= 1) return timeLeft - 1;\r\n          // return 0;\r\n          resetTimer();\r\n        }),\r\n      1000\r\n    );\r\n  }\r\n  function stopTimer() {\r\n\r\n    if (intervalRef.current == null) return;//if we have an intervalref est dont do any thing\r\n    // to stop intrval we use clearINterval(interval_to_be_cleared)\r\n    setTitle('Just relax! and Bring it back');\r\n    console.log(intervalRef.current);\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null;\r\n    setIsRunning(false);\r\n\r\n  }\r\n  function resetTimer() {\r\n    // set\r\n\r\n    clearInterval(intervalRef.current);\r\n    setTitle('Ready for NHER ADVENTURE');\r\n    setTimeLeft(25 * 60);\r\n    setIsRunning(false);\r\n  \r\n  }\r\n  // to render  .\r\n  const minutes = Math.floor(timeLeft / 60);\r\n  const seconds = timeLeft - minutes * 60;\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"timer\">\r\n        <span>{padTime(minutes)}</span>\r\n        <span>:</span>\r\n        <span>{padTime(seconds)}</span>\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        {!isRunning && <button onClick={startTimer}>Start</button>}\r\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\r\n        {timeLeft!=0 && <button onClick={resetTimer}>Reset</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}